{"ast":null,"code":"import _classCallCheck from\"/home/runner/work/react-angular-ember-elm-performance-comparison/react-angular-ember-elm-performance-comparison/implementations/react-17.0.2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/runner/work/react-angular-ember-elm-performance-comparison/react-angular-ember-elm-performance-comparison/implementations/react-17.0.2/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/runner/work/react-angular-ember-elm-performance-comparison/react-angular-ember-elm-performance-comparison/implementations/react-17.0.2/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/runner/work/react-angular-ember-elm-performance-comparison/react-angular-ember-elm-performance-comparison/implementations/react-17.0.2/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import classnames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";var TodoTextInput=/*#__PURE__*/function(_Component){_inherits(TodoTextInput,_Component);var _super=_createSuper(TodoTextInput);function TodoTextInput(){var _this;_classCallCheck(this,TodoTextInput);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={text:_this.props.text||''};_this.handleSubmit=function(e){var text=e.target.value.trim();if(e.which===13){_this.props.onSave(text);if(_this.props.newTodo){_this.setState({text:''});}}};_this.handleChange=function(e){_this.setState({text:e.target.value});};_this.handleBlur=function(e){if(!_this.props.newTodo){_this.props.onSave(e.target.value);}};return _this;}_createClass(TodoTextInput,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"input\",{className:classnames({edit:this.props.editing,'new-todo':this.props.newTodo}),type:\"text\",placeholder:this.props.placeholder,autoFocus:true,value:this.state.text,onBlur:this.handleBlur,onChange:this.handleChange,onKeyDown:this.handleSubmit});}}]);return TodoTextInput;}(Component);export{TodoTextInput as default};","map":{"version":3,"sources":["/home/runner/work/react-angular-ember-elm-performance-comparison/react-angular-ember-elm-performance-comparison/implementations/react-17.0.2/src/components/TodoTextInput.js"],"names":["React","Component","classnames","TodoTextInput","state","text","props","handleSubmit","e","target","value","trim","which","onSave","newTodo","setState","handleChange","handleBlur","edit","editing","placeholder"],"mappings":"42BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,C,8CAEqBC,CAAAA,a,uVASnBC,K,CAAQ,CACNC,IAAI,CAAE,MAAKC,KAAL,CAAWD,IAAX,EAAmB,EADnB,C,OAIRE,Y,CAAe,SAAAC,CAAC,CAAI,CAClB,GAAMH,CAAAA,IAAI,CAAGG,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,IAAf,EAAb,CACA,GAAIH,CAAC,CAACI,KAAF,GAAY,EAAhB,CAAoB,CAClB,MAAKN,KAAL,CAAWO,MAAX,CAAkBR,IAAlB,EACA,GAAI,MAAKC,KAAL,CAAWQ,OAAf,CAAwB,CACtB,MAAKC,QAAL,CAAc,CAAEV,IAAI,CAAE,EAAR,CAAd,EACD,CACF,CACF,C,OAEDW,Y,CAAe,SAAAR,CAAC,CAAI,CAClB,MAAKO,QAAL,CAAc,CAAEV,IAAI,CAAEG,CAAC,CAACC,MAAF,CAASC,KAAjB,CAAd,EACD,C,OAEDO,U,CAAa,SAAAT,CAAC,CAAI,CAChB,GAAI,CAAC,MAAKF,KAAL,CAAWQ,OAAhB,CAAyB,CACvB,MAAKR,KAAL,CAAWO,MAAX,CAAkBL,CAAC,CAACC,MAAF,CAASC,KAA3B,EACD,CACF,C,+DAED,iBAAS,CACP,mBACE,cAAO,SAAS,CACdR,UAAU,CAAC,CACTgB,IAAI,CAAE,KAAKZ,KAAL,CAAWa,OADR,CAET,WAAY,KAAKb,KAAL,CAAWQ,OAFd,CAAD,CADZ,CAKE,IAAI,CAAC,MALP,CAME,WAAW,CAAE,KAAKR,KAAL,CAAWc,WAN1B,CAOE,SAAS,CAAE,IAPb,CAQE,KAAK,CAAE,KAAKhB,KAAL,CAAWC,IARpB,CASE,MAAM,CAAE,KAAKY,UATf,CAUE,QAAQ,CAAE,KAAKD,YAVjB,CAWE,SAAS,CAAE,KAAKT,YAXlB,EADF,CAcD,C,2BAhDwCN,S,SAAtBE,a","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nexport default class TodoTextInput extends Component {\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    placeholder: PropTypes.string,\n    editing: PropTypes.bool,\n    newTodo: PropTypes.bool\n  }\n\n  state = {\n    text: this.props.text || ''\n  }\n\n  handleSubmit = e => {\n    const text = e.target.value.trim()\n    if (e.which === 13) {\n      this.props.onSave(text)\n      if (this.props.newTodo) {\n        this.setState({ text: '' })\n      }\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ text: e.target.value })\n  }\n\n  handleBlur = e => {\n    if (!this.props.newTodo) {\n      this.props.onSave(e.target.value)\n    }\n  }\n\n  render() {\n    return (\n      <input className={\n        classnames({\n          edit: this.props.editing,\n          'new-todo': this.props.newTodo\n        })}\n        type=\"text\"\n        placeholder={this.props.placeholder}\n        autoFocus={true}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit} />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}