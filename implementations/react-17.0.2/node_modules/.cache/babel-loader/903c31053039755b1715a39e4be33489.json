{"ast":null,"code":"import{createSelector}from'reselect';import{SHOW_ALL,SHOW_COMPLETED,SHOW_ACTIVE}from'../constants/TodoFilters';var getVisibilityFilter=function getVisibilityFilter(state){return state.visibilityFilter;};var getTodos=function getTodos(state){return state.todos;};export var getVisibleTodos=createSelector([getVisibilityFilter,getTodos],function(visibilityFilter,todos){switch(visibilityFilter){case SHOW_ALL:return todos;case SHOW_COMPLETED:return todos.filter(function(t){return t.completed;});case SHOW_ACTIVE:return todos.filter(function(t){return!t.completed;});default:throw new Error('Unknown filter: '+visibilityFilter);}});export var getCompletedTodoCount=createSelector([getTodos],function(todos){return todos.reduce(function(count,todo){return todo.completed?count+1:count;},0);});","map":{"version":3,"sources":["/home/runner/work/react-angular-ember-elm-performance-comparison/react-angular-ember-elm-performance-comparison/implementations/react-17.0.2/src/selectors/index.js"],"names":["createSelector","SHOW_ALL","SHOW_COMPLETED","SHOW_ACTIVE","getVisibilityFilter","state","visibilityFilter","getTodos","todos","getVisibleTodos","filter","t","completed","Error","getCompletedTodoCount","reduce","count","todo"],"mappings":"AAAA,OAASA,cAAT,KAA+B,UAA/B,CACA,OAASC,QAAT,CAAmBC,cAAnB,CAAmCC,WAAnC,KAAsD,0BAAtD,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,gBAAV,EAAjC,CACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAF,KAAK,QAAIA,CAAAA,KAAK,CAACG,KAAV,EAAtB,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAGT,cAAc,CAC3C,CAACI,mBAAD,CAAsBG,QAAtB,CAD2C,CAE3C,SAACD,gBAAD,CAAmBE,KAAnB,CAA6B,CAC3B,OAAQF,gBAAR,EACE,IAAKL,CAAAA,QAAL,CACE,MAAOO,CAAAA,KAAP,CACF,IAAKN,CAAAA,cAAL,CACE,MAAOM,CAAAA,KAAK,CAACE,MAAN,CAAa,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,SAAN,EAAd,CAAP,CACF,IAAKT,CAAAA,WAAL,CACE,MAAOK,CAAAA,KAAK,CAACE,MAAN,CAAa,SAAAC,CAAC,QAAI,CAACA,CAAC,CAACC,SAAP,EAAd,CAAP,CACF,QACE,KAAM,IAAIC,CAAAA,KAAJ,CAAU,mBAAqBP,gBAA/B,CAAN,CARJ,CAUD,CAb0C,CAAtC,CAgBP,MAAO,IAAMQ,CAAAA,qBAAqB,CAAGd,cAAc,CACjD,CAACO,QAAD,CADiD,CAEjD,SAAAC,KAAK,QACHA,CAAAA,KAAK,CAACO,MAAN,CAAa,SAACC,KAAD,CAAQC,IAAR,QACXA,CAAAA,IAAI,CAACL,SAAL,CAAiBI,KAAK,CAAG,CAAzB,CAA6BA,KADlB,EAAb,CAEE,CAFF,CADG,EAF4C,CAA5C","sourcesContent":["import { createSelector } from 'reselect'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst getVisibilityFilter = state => state.visibilityFilter\nconst getTodos = state => state.todos\n\nexport const getVisibleTodos = createSelector(\n  [getVisibilityFilter, getTodos],\n  (visibilityFilter, todos) => {\n    switch (visibilityFilter) {\n      case SHOW_ALL:\n        return todos\n      case SHOW_COMPLETED:\n        return todos.filter(t => t.completed)\n      case SHOW_ACTIVE:\n        return todos.filter(t => !t.completed)\n      default:\n        throw new Error('Unknown filter: ' + visibilityFilter)\n    }\n  }\n)\n\nexport const getCompletedTodoCount = createSelector(\n  [getTodos],\n  todos => (\n    todos.reduce((count, todo) =>\n      todo.completed ? count + 1 : count,\n      0\n    )\n  )\n)"]},"metadata":{},"sourceType":"module"}